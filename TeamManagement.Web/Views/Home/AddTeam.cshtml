@model TeamManagement.Web.Models.TeamModel
@{
    ViewBag.Title = "AddTeam";
}

@Html.Partial("_Slides")
<div class="section">

    <div class="container">
        <div class="form-group">
            @if (Model != null)
            {
                <div class="alert alert-success col-sm-offset-2 col-sm-10">
                    @if (Model.successMessage)
                    {
                        <span>
                            <strong>Success!</strong> The record has been successfully inserted.
                        </span>
                    }
                    else if (!Model.successMessage)
                    {
                        <span>
                            @Html.ValidationSummary()
                        </span>
                    }

                </div>
            }
            @using (Html.BeginForm("AddTeam", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-sm-3">
                        <h4>Add a new team</h4>
                    </div>

                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.TeamName, new { @class = "col-md-2 control-label" })
                    <div class="col-sm-3">
                        @Html.TextBoxFor(m => m.TeamName, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
                        @Html.ValidationMessageFor(m => m.TeamName, null, new { @class = "errorMessage" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SportCode, new { @class = "col-md-2 control-label" })
                    <div class="col-sm-3">
                        @Html.TextBoxFor(m => m.SportCode, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
                        @Html.ValidationMessageFor(m => m.SportCode, null, new { @class = "errorMessage" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SeasonYear, new { @class = "col-md-2 control-label" })
                    <div class="col-sm-3">
                        @Html.TextBoxFor(m => m.SeasonYear, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
                        @Html.ValidationMessageFor(m => m.SeasonYear, null, new { @class = "errorMessage" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Motto, new { @class = "col-md-2 control-label" })
                    <div class="col-sm-3">
                        @Html.TextBoxFor(m => m.Motto, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
                        @Html.ValidationMessageFor(m => m.Motto, null, new { @class = "errorMessage" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-success" />
                        <button id="button2id" name="button2id" class="btn btn-danger">Cancel</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
