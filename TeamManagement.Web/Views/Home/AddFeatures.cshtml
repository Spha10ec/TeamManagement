@model TeamManagement.Web.Models.TeamFeaturesModel
<script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/gijgo.js"></script>
<link href="~/Content/gijgo.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
@Html.Partial("_Slides")
<div class="section">
    <div class="container">
        @if (!String.IsNullOrEmpty(Model.successMessage) || !String.IsNullOrEmpty(Model.errorMessage))
        {
            <div class="alert alert-success col-sm-10">
                @if (!String.IsNullOrEmpty(Model.successMessage))
                {
                    <span>
                        <strong>Success!</strong> @Model.successMessage
                    </span>
                }

                else if (!String.IsNullOrEmpty(Model.errorMessage))
                {
                    <p class ="red">
                        @Model.errorMessage
                        </p>
                    <span >
                      
                        @Html.ValidationSummary()
                    </span>
                }

            </div>
        }
        <div class="row">
            <div class="col-xs-8">
                <form class="form-inline">
                    <div class="form-group">
                        <input type="text" class="form-control" id="txtQuery" placeholder="Search...">
                    </div>
                    <button id="btnSearch" type="button" class="btn btn-default">Search</button>
                    <button id="btnClear" type="button" class="btn btn-default">Clear</button>
                </form>
            </div>
            <div class="col-xs-4">
                <button id="btnAdd" type="button" class="btn btn-default pull-right">Add A New Feature</button>
            </div>
        </div>
        <div class="row" style="margin-top: 10px">
            <div class="col-xs-12">
                <table id="grid"></table>
            </div>
        </div>
    </div>
</div>
<div id="dialog" style="display: none">

    @using (Html.BeginForm("AddFeatures", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "addFeatures" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.TeamId)
        @Html.HiddenFor(m => m.Season)
        @Html.HiddenFor(m => m.HomeTeam)
        @Html.HiddenFor(m => m.recordId)
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(m => m.PlayingAgainst, new { @class = "control-label" })
            </div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.PlayingAgainst, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
                @Html.ValidationMessageFor(m => m.PlayingAgainst, null, new { @class = "errorMessage" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(m => m.Venue, new { @class = " control-label" })
            </div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.Venue, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
                @Html.ValidationMessageFor(m => m.Venue, null, new { @class = "errorMessage" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-4">
                @Html.LabelFor(m => m.Date, new { @class = "c control-label" })
            </div>
            <div class="col-xs-4">
                @Html.TextBoxFor(m => m.Date, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name", @id = "datetimepicker4", @value= DateTime.Now })

                @Html.ValidationMessageFor(m => m.Date, null, new { @class = "errorMessage" })
            </div>
        </div>

        <button type="button" id="btnSave" class="btn btn-default">Add</button>
        <button type="button" id="btnCancel" class="btn btn-default">Cancel</button>
    }


</div>
<div id="updateScores" class="my_modal" style="display: none">

    @using (Html.BeginForm("UpdateScores", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "updateScores" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.TeamId)
        @Html.HiddenFor(m => m.Season)
        @Html.HiddenFor(m => m.HomeTeam)
         @Html.HiddenFor(m => m.id)
    <input type="hidden" id="recordIds" name="recordIds">
    <div class="form-group">
            <label> @Model.HomeTeam Score</label>
            @Html.TextBoxFor(m => m.HomeScore, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
            @Html.ValidationMessageFor(m => m.HomeScore, null, new { @class = "errorMessage" })
        </div>
        <div class="form-group">
            <label> Other team Score</label>
            @Html.TextBoxFor(m => m.AwayTeamScore, new { @class = "form-control", data_val = "true", data_val_required = "You must enter a team name" })
            @Html.ValidationMessageFor(m => m.AwayTeamScore, null, new { @class = "errorMessage" })
        </div>
        <button type="submit" id="btnSubmit" class="btn btn-default">Add</button>
        <button type="button" id="btnCancel" class="btn btn-default">Cancel</button>
    }

    <style>
        div#dialog {
            width: 30% !important;
        }

        .my_modal {
            width: 400px !important;
        }

            .my_modal label, .my_modal input {
                margin-left: 14px;
            }

            .my_modal input {
                width: 61px;
            }
    </style>
</div>
<script src="http://stevenlevithan.com/assets/misc/date.format.js"></script>
<script src="~/Scripts/moment-with-locales.js"></script>
<script src="~/Scripts/transition.js"></script>
<script src="~/Scripts/collapse.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script type="text/javascript">
    $(function () {
        var dateNow = new Date();
        $('#datetimepicker4').datetimepicker({
            format: 'YYYY/MM/DD',
            defaultDate: '2017/01/01'
        });
    });
    $(document).ready(function () {
        var grid, dialog;
        grid = $('#grid').grid({
            dataSource: '../Home/GetFeaturesAndScores',
            uiLibrary: 'bootstrap',
            columns: [
                { field: 'id', hidden: true },
                   { field: 'Date', sortable: true, type: 'date', format: 'yyyy/mm/dd' },
                { field: 'HomeTeam', sortable: true },
                 { field: 'HomeScore', title: '', width: 70 },
                { field: 'PlayingAgainst', title: 'Team playing with', sortable: true },
                 { field: 'AwayTeamScore', title: '', width: 70 },
                { field: 'Venue', title: 'Venue', sortable: true },
                { width: 70, tmpl: '<a href="#">Scores</a>', align: 'center', events: { 'click': UpdateScores } },
                { title: '', field: 'Edit', width: 34, type: 'icon', icon: 'glyphicon-pencil', tooltip: 'Edit', events: { 'click': Edit } },
                { title: '', field: 'Delete', width: 34, type: 'icon', icon: 'glyphicon-remove', tooltip: 'Delete', events: { 'click': Delete } }
            ],
            pager: { limit: 5, sizes: [2, 5, 10, 20] }
        });
        dialog = $('#dialog').dialog({
            uiLibrary: 'bootstrap',
            title: 'Add/Edit Record',
            autoOpen: false,
            resizable: false,
            modal: true
        });
        updateScores = $('#updateScores').dialog({
            uiLibrary: 'bootstrap',
            title: 'Results',
            autoOpen: false,
            resizable: false,
            modal: true
        });
        function UpdateScores(e) {

            $('#recordIds').val(e.data.record.id);
            $('#HomeTeam').val(e.data.record.HomeTeam);
            $('#PlayingAgainst').val(e.data.record.PlayingAgainst);
            $('#Season').val(e.data.record.Season);
            $('#Venue').val(e.data.record.Venue);
            $('#updateScores').dialog('open');
        }
        function Edit(e) {
            $('#id').val(e.data.id);
            $('#HomeTeam').val(e.data.record.HomeTeam);
            $('#PlayingAgainst').val(e.data.record.PlayingAgainst);
            $('#Season').val(e.data.record.Season);
            $('#Venue').val(e.data.record.Venue);
            $('#updateScores').dialog('open');
        }
        function Delete(e) {
            if (confirm('Are you sure?')) {
                alert('TODO: Write code that delete the data on the server.');
                grid.reload(); //load the new data from the server after the deletion
            }
        }
        function Save() {
            if ($('#id').val()) {
                var id = parseInt($('#id').val());
                $("#addFeatures").submit();
                grid.updateRow(id, { 'id': id, 'PlayingAgainst': $('#PlayingAgainst').val(), 'Venue': $('#Venue').val() });
            } else {
                $("#addFeatures").submit();
                grid.addRow({ 'id': grid.count(true) + 1, 'PlayingAgainst': $('#PlayingAgainst').val(), 'Venue': $('#Venue').val() });
            }
            dialog.close();
        }
        function UpdateTeamScores() {
            //   if ($('#id').val()) {
            var id = parseInt($('#id').val());
            $('#id').val($('#recordIds').val());
           // alert($('#id').val());
            $("#updateScores").submit();
            grid.updateRow(id, { 'id': id, 'PlayingAgainst': $('#PlayingAgainst').val(), 'Venue': $('#Venue').val(), 'HomeScore': $('#HomeScore').val(), 'AwayTeamScore': $('#AwayTeamScore').val() });
            //  }
            dialog.close();
        }
        $('#btnAdd').on('click', function () {
            $('#id').val('');
            $('#PlayingAgainst').val('');
            $('#Venue').val('');
            $('#dialog').dialog('open');
        });
        $('#btnSave').on('click', Save);
        $('#btnSubmit').on('click', UpdateTeamScores);
        $('#btnCancel').on('click', function () {
            dialog.close();
        });
        $('#btnSearch').on('click', function () {
            grid.reload({ name: $('#txtQuery').val() });
        });
        $('#btnClear').on('click', function () {
            $('#txtQuery').val('');
            grid.reload({ name: '' });
        });
    });
</script>
